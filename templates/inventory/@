from django.shortcuts import render

from django.http import HttpResponse
from .models import machine, svr, windowsSvrLicense, windowsLicense, officeLicense
from .models import machine_form,svr_form,windowsSvrLicense_form,officeLicense_form
from django.http import HttpResponseForbidden
from django.shortcuts import get_object_or_404
from apps.inventory.functions import *
from django.db.models import Sum
from django.views.decorators.csrf import csrf_exempt
import os, sys
# Create your views here.
def summary(request):
    SumFree = officeLicense.objects.all().aggregate(Sum('free'))['free__sum']
    SumAvailable = officeLicense.objects.all().aggregate(Sum('available'))['available__sum']
    SumInUse = officeLicense.objects.all().aggregate(Sum('inUse'))['inUse__sum']
    return render(request,"inventory/summary.html",locals())
def winsvrlic(request):
    licenses = windowsSvrLicense.objects.all()
    return render(request,"inventory/winSrvLic.html",locals())
def officelic(request):
    licenses = officeLicense.objects.all()
    return render(request,"inventory/officeLic.html",locals())
def workstations(request):
    filtr ="(|(cn=jan-pc-*)(cn=jan-nb-*))"
    check_credentials('t.maszkiewicz','Fasada123',filtr)
    workstations = machine.objects.all()
    return render(request,"inventory/workstations_html.html",locals())
def servers(request):
    filtr ="(cn=jan-svr-*)"
    check_credentials('t.maszkiewicz','Fasada123',filtr)
    svrs = svr.objects.all()
    return render(request,"inventory/svrs.html",locals())
def winsvrlic_new(request):
    if request.method=='POST':
        form = windowsSvrLicense_form(request.POST)
        if form.is_valid():
            license = windowsSvrLicense()
            license.key = form.cleaned_data["key"]
            license.available = form.cleaned_data["available"]
            license.osName = form.cleaned_data["osName"]
            license.description = form.cleaned_data["description"]
            license.free = form.cleaned_data["free"]
            license.inUse = form.cleaned_data["inUse"]
        
            #mach.cn = request.cn
            license.save()
        else:
            print("BLAD")
    else:
        form = windowsSvrLicense_form()
        print("OK")
    return render(request,"inventory/winSvrLic_new.html",locals())

def officelic_new(request):
    if request.method=='POST':
        form = officeLicense_form(request.POST)
        if form.is_valid():
            license = officeLicense()
            license.key = form.cleaned_data["key"]
            license.available = form.cleaned_data["available"]
            license.description = form.cleaned_data["description"]
            license.free = form.cleaned_data["free"]
            license.inUse = form.cleaned_data["inUse"]
        
            #mach.cn = request.cn
            license.save()
        else:
            print("BLAD")
    else:
        form = officeLicense_form()
        print("OK")
    return render(request,"inventory/officeLic_new.html",locals())

def winsvrlic_del(request,pk):
    lic = windowsSvrLicense.objects.filter(pk=pk).delete()
    return render(request,"inventory/winSrvLic.html",locals())
    
def winsvrlic_edit(request,pk):
    license = windowsSvrLicense.objects.get(pk=pk)
    if request.method=='POST':
        form = windowsSvrLicense_form(request.POST, instance = license)
        if form.is_valid():
            #mach.cn = request.cn
            license.save()
        else:
            print("BLAD")
    else:
        form = machine_form(instance = license)
    return render(request,"inventory/winSvrLic_edit.html",locals())
def workstation_edit(request,pk):
    mach = machine.objects.get(pk=pk)
    officeLicOld = mach.officeLicense
    users = user.objects.all()
    officeLicenses = officeLicense.objects.filter(free=1)
    officeLicenses.append(Null)
    print(officeLicenses)
    if request.method=='POST':
        form = machine_form(request.POST, instance = mach)
        if form.is_valid():
            mach.save()
            try:
                officeLicNew = officeLicense.objects.filter(key=mach.officeLicense.key)[0]
                if officeLicNew!=officeLicOld:
                    officeLicNew.free -=1 
                    officeLicNew.inUse +=1 
                    officeLicNew.save()
                    if officeLicOld!=None:
                        officeLicOld.free +=1
                        officeLicOld.inUse -=1
                        officeLicOld.save()
            except:
                None
        else:
            print("BLAD----")


    else:
        officeLicOld = mach.officeLicense
        form = machine_form(instance = mach)
        print("------",mach.aktualizacja)
        print("OK")
    return render(request,"inventory/workstation_edit.html",locals())
def svr_edit(request,pk):
    svr1 = svr.objects.get(pk=pk)
    WinLicOld = svr1.WindowsLicense
    users = user.objects.all()
    licenses = windowsSvrLicense.objects.all()
    if request.method=='POST':
        form = svr_form(request.POST, instance = svr1)
        if form.is_valid():
            svr1.save()
            try:
                WinLicNew = officeLicense.objects.filter(key=svr1.WindowsLicense.key)[0]
                if WinLicNew!=WinLicOld:
                    WinLicNew.free -=1 
                    WinLicNew.inUse +=1 
                    WinLicNew.save()
                    if WinLicOld!=None:
                        WinLicOld.free +=1
                        WinLicOld.inUse -=1
                        WinLicOld.save()
            except:
                None
        else:
            print("BLAD1111")
    else:
        form = svr_form(instance = svr1)
        print("OK")
    return render(request,"inventory/svr_edit.html",locals())
def users(request):
    wynik = check_credentials_users('t.maszkiewicz','Fasada123')
    return HttpResponse(wynik)

def officelic_edit(request,pk):
    license = officeLicense.objects.get(pk=pk)
    if request.method =='POST':
        form = officeLicense_form(request.POST, instance = license)
        if form.is_valid():
            license.save()
        else:
            None
 
    return render(request,"inventory/officeLic_edit.html",locals())
def vncview(request):
    #os.popen('java -jar tika-app.jar -t %s > textOutput.txt' % fileName)    
    os.popen('java -jar tightvnc-jviewer.jar')

    return render(request,"inventory/vncview.html",locals())
    #return render(request,"inventory/summary.html",locals())
def spot(request):
    msqlquery('jan-svr-spot01\SQLEXPRESS', 'spot_sql', 'IDsQE8T5', 'SFC-Polipol','SELECT * FROM EMPLOYEE')

    return render(request,"inventory/spot.html",locals())
@csrf_exempt
def kj(request):
    etykieta = request.POST['etykieta']
    print(etykieta)
    return render(request,"inventory/spot.html",locals())

